#!/usr/bin/ksh

if [[ -r "./cfg/utterson.cfg" ]]; then
   CFGDIR="./cfg"
elif [[ -r "~/.config/utterson/utterson.cfg" ]]; then
   CFGDIR="~/.config/utterson"
elif [[ -r "/etc/utterson/utterson.cfg" ]]; then
   CFGDIR="~/etc/utterson"
elif [[ -r "${0%%/*}/../cfg/utterson.cfg" ]]; then
   CFGDIR="${0%%/*}/../cfg"
else
   echo "ERROR: no configuration found"
   exit 1
fi

. ${CFGDIR}/utterson.cfg
TVARS[GENBLOGVERSION]="utterson v0.4"

runtpl() {
    # runs m4 on the tpl found in ${BASEDIR}/layout/$1/$2, using all
    # variables in TVARS
    ( [[ $# -ne 2 ]] ||  [[ ! -r ${BASEDIR}/layout/$1/$2 ]] ) && return
    typeset -a defines

    # create array of -D parameters to m4
    for key in ${!TVARS[@]}; do
        defines[${#defines[@]}]="-D${key}=${TVARS[$key]}"
    done

    # do template instantiation
    m4 "${defines[@]}" ${BASEDIR}/layout/$1/$2
    unset defines # clear those damn defines again
}

getRFCtime() {
    # returns the last file update time in an RFC3339 format
    stat -c "%y" "${@}" | sed 's/.*\([0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}\) \([0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}\).*\([+-][0-9]\{2\}\).*/\1T\2\3:00/g'
}

# wp has a nice youtube syntax: [youtube=url], better than always
# writing the object/embed code by hand
# also wp has some image captioning syntax that we need to handle
# maybe we can add some other "plugins" as well.
filter() {
    sed 's/[[]youtube=http:[/][/]www.youtube.com[/]watch[?]v=\(.*\)]/<object type="application\/x-shockwave-flash" data="http:\/\/www.youtube.com\/v\/\1&hl=en" width="640" height="534"><param name="movie" value="http:\/\/www.youtube.com\/v\/\1&hl=en" \/><param name="FlashVars" value="playerMode=embedded" \/><param name="wmode" value="transparent" \/><\/object>/g; s/\[caption .* align="align\(.*\)" width="[0-9]*" caption="\(.*\)"\]\(.*\)\[\/caption]/<div class="image align\1">\3<p class="caption-text">\2<\/p><\/div>/g; s/[[]vimeo=http:\/\/vimeo.com\/\([0-9]*\).*]/<object width="640" height="534"><param name="allowfullscreen" value="true" \/><param name="allowscriptaccess" value="always" \/><param name="movie" value="http:\/\/vimeo.com\/moogaloop.swf?clip_id=\1&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=00ADEF&amp;fullscreen=1" \/><embed src="http:\/\/vimeo.com\/moogaloop.swf?clip_id=\1&amp;server=vimeo.com&amp;show_title=1&amp;show_byline=1&amp;show_portrait=0&amp;color=00ADEF&amp;fullscreen=1" type="application\/x-shockwave-flash" allowfullscreen="true" allowscriptaccess="always" width="640" height="534"><\/embed><\/object>/g' "$1"
}

getpostfile() {
    fname="${1##*/}"
    echo "${fname// /_}"
}

urlencode() {
   sed -E -e 's/%/%25/g' -e 's/ /%20/g' -e 's/"/%22/g' -e 's/#/%23/g' \
       -e 's/&/%26/g' -e 's/</%3C/g' -e 's/>/%3E/g' -e 's/\{/%7B/g' -e 's/}/%7D/g' -e 's/\|/%7C/g' \
       -e 's/\\/%5C/g' -e 's/\^/%5E/g' -e 's/\~/%7E/g' -e 's/\[/%5B/g' -e 's/\]/%5D/g' \
       -e s/$'á'/%C3%A1/g -e s/$'Á'/%C3%81/g -e s/$'é'/%C3%A9/g -e s/$'É'/%C3%89/g -e s/$'í'/%C3%AD/g \
       -e s/$'Í'/%C3%8D/g -e s/$'ó'/%C3%B3/g -e s/$'Ó'/%C3%93/g -e s/$'ö'/%C3%B6/g -e s/$'Ö'/%C3%96/g \
       -e s/$'ő'/%C5%91/g -e s/$'Ő'/%C5%90/g -e s/$'ú'/%C3%BA/g -e s/$'Ú'/%C3%9A/g -e s/$'ü'/%C3%BC/g \
       -e s/$'Ü'/%C3%9C/g -e s/$'ű'/%C5%B1/g -e s/$'Ű'/%C5%B0/g
}

tvarinit() {
    fname="${entry##*/}"
    tmp="${fname%.html}"
    TVARS[POSTTITLE]="${tmp//_/ }"
    TVARS[POSTUPDATED]="$(getRFCtime "$entry")"
    TVARS[POSTUPDATEDSHORT]="$(stat -c "%y" "$entry" | cut -d" " -f1)"
    TVARS[POSTCONTENT]="$(filter "$entry")"
    #TVARS[POSTURL]="${BASEURL}/posts/$(echo ${fname// /_} | urlencode)"
    TVARS[POSTURL]="${BASEURL}/posts/${fname// /_}"
    TVARS[PAGETITLE]="${TVARS[BLOGTITLE]} - ${TVARS[POSTTITLE]}"
}

# vim: set filetype=sh:
