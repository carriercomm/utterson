#!/bin/ksh
#    This file is part of utterson.

#    utterson is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    utterson is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with utterson.  If not, see <http://www.gnu.org/licenses/>.
#
# (C) 2009 by Stefan Marsiske, <stefan.marsiske@gmail.com>

. ${0%%/*}/utterson.lib

# this function creates rules for index.html+page-X...Z.html style archives
# in the directory specified by the first parameter
# for all posts read via stdin
function car {
	i=0
	pages=""
	pagename="index.html"
	set -A allposts $(tr '\n' ' ')
	pagecnt=$((${#allposts[@]} / ${ITEMMAX} ))
   # set targetdir
   subdir="$1"
   if [[ -z "$subdir" ]]; then
       target="\$(TMPDIR)"
       postlist="liveposts"
       ubertarget="echo archive:\$pages"
   else
       target="\$(TMPDIR)/${subdir}"
       postlist="$subdir"
	    ubertarget="echo ${subdir}:\$pages \${target}/atom.xml"
   fi
	while [ $i -le ${pagecnt} ]; do
      # calculate range of items
		lbound=$((i*${ITEMMAX}+1))
		ubound=$((i*${ITEMMAX}+${ITEMMAX}))

      # set next page link
		next=$((i+1))
		if [ $next -le $pagecnt ]; then
		    nextpage="page-$next.html"
		else
		    nextpage=""
		fi

      # set previous link
		prev=$((i-1))
		if [ $prev -eq 0 ]; then
		    prevpage="index.html"
		elif [ $prev -lt 0 ]; then
		    prevpage=""
		else
		    prevpage="page-$prev.html"
		fi

		pages="$pages $target/${pagename}"
		echo "$target/${pagename}: \$(CFGDIR)/$postlist $(sed -n -e $lbound,${ubound}p';'${ubound}q ${CFGDIR}/$postlist 2>/dev/null | tr "\n" " ")"
   	echo "	@test -d \$(@D) || mkdir -p \$(@D)"
	   echo "	sed -n -e \"$lbound,$ubound p;$ubound q\" \$(CFGDIR)/$postlist 2>/dev/null | ksh bin/page \"${subdir}\" \"$prevpage\" \"$nextpage\" >\$@"
		echo
		i=$((i + 1))
		pagename="page-$i.html"
	done
	echo "${target}/atom.xml: \$(CFGDIR)/$postlist $(head -$ITEMMAX ${CFGDIR}/$postlist 2>/dev/null | tr "\n" " ")"
   echo "	@test -d \$(@D) || mkdir -p \$(@D)"
	echo "	head -$ITEMMAX \$(CFGDIR)/$postlist | ksh bin/atom >\$@"
	echo
   eval "$ubertarget"
	echo
}

# this function creates rules for linked single page posts via stdin
function postrules {
    read tname
    i=1
    while true; do
        read nextf || nextf=""
        if [[ $i -eq 2 ]]; then
	         print "\$(TMPDIR)/${tname}: \$(CFGDIR)/liveposts ${tname}"
            print "	@test -d \$(@D) || mkdir -p \$(@D)"
	         print "	ksh bin/post \"$tname\" \"$prevf\" \"$nextf\" >\$@\n"
        else
	         print "\$(TMPDIR)/${tname}: ${tname}"
            print "	@test -d \$(@D) || mkdir -p \$(@D)"
	         print "	ksh bin/post \$^ \"$prevf\" \"$nextf\" >\$@\n"
        fi
	     postpages="$postpages \$(TMPDIR)/${tname}"
        [[ -z "$nextf" ]] && break
        prevf="${tname}"
        tname="${nextf}"
        [[ $i -lt 3 ]] && i=$((i+1))
    done
}

# reproduce header
cp Makefile.in Makefile

# create main index archive rules
car "" < "${CFGDIR}/liveposts"

# create tag rules
for tag in $(ls -x ${CFGDIR}/tags/ 2>/dev/null); do
	tags="$tags tags/${tag}"
   car "tags/$tag" <${CFGDIR}/tags/${tag}
done
echo "tags:${tags} \$(TMPDIR)/tags/index.html"
echo

# create individual posts rules
postrules <${CFGDIR}/liveposts
echo "posts:$postpages \$(TMPDIR)/posts/index.html"
echo

# create rules for drafts
(cat ${CFGDIR}/liveposts; cat ${CFGDIR}/liveposts; ls -t posts/*.html) |
   sort |
   uniq -u |
   while read draft; do
	    print "\$(TMPDIR)/drafts/${draft#posts/}: ${draft}"
       print "	@test -d \$(@D) || mkdir -p \$(@D)"
	    print "	ksh bin/post \$^ \"\" \"\" >\$@\n"
	    drafts="$drafts \$(TMPDIR)/drafts/${draft#posts/}"
   done
echo "drafts:${drafts}"
