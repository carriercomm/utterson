#!/usr/bin/ksh
# generates an atomfeed and static html blog pages from
# posts/*.html files, containing the entry content of the posts, the
# filename is used as a title, the last modification time as
# lastupdate.
#
# TODO tags, blog search

. ${0%%/*}/utterson.cfg
. ${0%%/*}/utterson.lib

########### start processing #############

postslen=${#@}

# get timestamp of very last post for rss
TVARS[LASTUPDATED]="$(getRFCtime "$1")"

#### MAIN LOOP STARTS HERE ####

counter=0
# process posts
for entry; do
    [[ $((counter % ITEMMAX)) == 0 ]] && {
        # write out headers
        runtpl xhtml header >"${TMPDIR}/${HTMLFILE}"
    }

    fname="${entry##*/}"
    TVARS[POSTTITLE]="${fname%.html}"
    TVARS[POSTUPDATED]="$(getRFCtime "$entry")"
    TVARS[POSTUPDATEDSHORT]="$(stat -c "%y" "$entry" | cut -d" " -f1)"
    TVARS[POSTCONTENT]="$(filter "$entry")"
    TVARS[POSTURL]="posts/${fname// /_}"
    TVARS[PAGETITLE]="${TVARS[BLOGTITLE]} - ${TVARS[POSTTITLE]}"

    # write item into archive and optionally into the feed
    runtpl xhtml item >>"${TMPDIR}/${HTMLFILE}"

    # we have writen ITEMMAX posts, time to write some footers and
    # starts some new files
    [[ $((counter % ITEMMAX)) -eq $((ITEMMAX -1)) ]] && {
        getprevnext
        runtpl xhtml footer >>"${TMPDIR}/${HTMLFILE}"
        HTMLFILE="page-$(( (counter / ITEMMAX ) + 1 )).html"
    }
    counter=$((counter + 1))
done

# last file might not be closed
[[ $((counter % ITEMMAX)) -ne 0 ]] && {
    dofooter
    runtpl xhtml footer >>"${TMPDIR}/${HTMLFILE}"
}
