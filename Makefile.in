# -*- make -*-
# FILE: "blog/Makefile"
#    This file is part of utterson.

#    utterson is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    utterson is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with utterson.  If not, see <http://www.gnu.org/licenses/>.
#
# (C) 2009 by Stefan Marsiske, <stefan.marsiske@gmail.com>
# $Id:$

maxposts=15
TMPDIR=tmp
SHELL:=/usr/bin/zsh
allposts:=$(shell ls -t posts/*.html )
newestposts:=$(shell ls -t posts/*.html | head -$(maxposts) )

# move all files afterwards to www

all: posts archive atom sitemap static

index: $(TMPDIR)/index.html
atom: $(TMPDIR)/atom.xml
sitemap: $(TMPDIR)/sitemap.xml.gz

$(TMPDIR)/index.html: $(newestposts)
	ksh bin/index $^ >$@

$(TMPDIR)/atom.xml: $(newestposts)
	ksh bin/atom $^ >$@

static: layout/static/*
	ksh bin/static $^

Makefile: $(allposts)
	cp Makefile.in Makefile
	#	create page rules
	set -A allposts $^; \
	pagecnt=$$(($${#allposts[@]} / $(maxposts) )); \
	i=1; \
	while [ $$i -lt $${pagecnt} ]; do \
		lbound=$$((i*$(maxposts) +1)); \
		ubound=$$((i*$(maxposts) +$(maxposts) )); \
		next=$$((i+1)); \
		if [ $$next -lt $$pagecnt ]; then \
		    nextpage="page-$$next.html"; \
		else \
		    nextpage=""; \
		fi; \
		prev=$$((i-1)); \
		if [ $$prev -eq 0 ]; then \
		    prevpage="index.html"; \
		else \
		    prevpage="page-$$prev.html"; \
		fi; \
		pages="$$pages \$$(TMPDIR)/page-$$i.html"; \
		echo "\$$(TMPDIR)/page-$$i.html: $${allposts[$$lbound,$$ubound]}" >>$@; \
		echo "	ksh bin/page \"page-$$i.html\" \"$$prevpage\" \"$$nextpage\" "'$$^'" >\$$@" >>$@; \
		echo >>$@; \
		i=$$((i + 1)); \
	done; \
	echo "pages: $$pages" >>$@; \
	echo >>$@; \
	echo "archive: \$$(TMPDIR)/index.html pages" >>$@; \
	echo >>$@; \
	echo "\$$(TMPDIR)/sitemap.xml.gz: "'$$'"(allposts) \$$(TMPDIR)/index.html $$pages" >>$@; \
	echo "	ksh bin/sitemap "'$$'"(allposts) | gzip -c >tmp/sitemap.xml.gz" >>$@; \
	echo >>$@
	#	create posts rules
	i=1; \
	set -A files $^; \
	#. bin/utterson.lib; \
	while [ $${#files[@]} -ge $$i ]; do \
		#tname=posts/$$(f=$${files[i]##*posts/} ;echo $${f// /_} | urlencode); \
		tname="$${files[i]}"; \
		echo "\$$(TMPDIR)/$${tname}: $${files[i]}" >>$@; \
      echo "	@test -d \$$(@D) || mkdir -p \$$(@D)" >>$@; \
		echo "	ksh bin/post \"$${files[i]}\" \"$${files[i-1]}\" \"$${files[i+1]}\" >\$$@\n\n" >>"$@"; \
		postpages="$$postpages \$$(TMPDIR)/$${tname}"; \
		i=$$((i+1)); \
	done; \
	echo "posts: $$postpages" >>$@

clean:
	rm $(TMPDIR)/*.(html|xml|gz|css)
	rm -rf $(TMPDIR)/posts

make:
	ksh bin/makemake

.PHONY: static make
